/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {}

export interface components {
  schemas: {
    "Address-read": components["schemas"]["Address-write"] & {
      address: unknown;
      address2: unknown;
      city: unknown;
      country: unknown;
      email: unknown;
      phoneNumber: unknown;
      zipCode: unknown;
    };
    "Address-property-read": {
      /**
       * Adresse
       * @description Adresse
       */
      address: components["schemas"]["Address-read"];
    };
    "Address-property-write": {
      /**
       * Adresse
       * @description Adresse
       */
      address?: components["schemas"]["Address-write"];
    };
    "Address-write": components["schemas"]["Resource"] & {
      /**
       * Adresse
       * Format: streetAddress
       * @description Adresse
       * @example 5 rue Alfred Nobel
       */
      address?: string | null;
      /**
       * Complément d'adresse
       * Format: streetAddress
       * @description Complément d'adresse
       * @example ZA La charrière
       */
      address2?: string | null;
      /**
       * Ville
       * Format: addressLocality
       * @description Ville
       * @example Rioz
       */
      city?: string | null;
      /**
       * Pays
       * Format: addressLocality
       * @description Pays
       * @example FR
       */
      country?: string | null;
      /**
       * E-mail
       * Format: email
       * @description E-mail
       * @example sales@tconcept.fr
       */
      email?: string | null;
      /**
       * Numéro de téléphone
       * Format: telephone
       * @description Numéro de téléphone
       * @example 03 84 91 99 84
       */
      phoneNumber?: string | null;
      /**
       * Code postal
       * Format: postalCode
       * @description Code postal
       * @example 70190
       */
      zipCode?: string | null;
    };
    /** @description Authentification */
    Auth: {
      /**
       * Mot de passe
       * Format: accessCode
       * @description Mot de passe
       * @example super
       */
      password: string;
      /**
       * @description Identifiant
       * @example super
       */
      username: string;
    };
    /** @description Transporteur */
    "Carrier-read": components["schemas"]["Address-property-read"] &
      components["schemas"]["Carrier-properties"] &
      components["schemas"]["Entity"];
    /** @description Transporteur */
    "Carrier-properties": {
      /**
       * Nom
       * @description Nom
       * @example DHL
       */
      name: string;
    };
    /** @description Transporteur */
    "Carrier-write": components["schemas"]["Address-property-write"] &
      components["schemas"]["Carrier-properties"] &
      components["schemas"]["Entity"];
    /** @description Couleur */
    "Color-read": components["schemas"]["Color-write"] &
      components["schemas"]["Entity"];
    /** @description Couleur */
    "Color-write": {
      /**
       * Nom
       * @description Nom
       * @example Gris
       */
      name: string;
      /**
       * rgb
       * Format: color
       * @description rgb
       * @example #848484
       */
      rgb: string;
    };
    /** @description Famille de composants */
    "ComponentFamily-read": components["schemas"]["ComponentFamily-write"] &
      components["schemas"]["Entity"] & {
        copperable: unknown;
        customsCode: unknown;
        file: unknown;
        parent: unknown;
      };
    /** @description Famille de composants */
    "ComponentFamily-write": {
      /**
       * Code
       * @description Code
       * @example CAB
       */
      code: string;
      /**
       * Cuivré
       * @description Cuivré
       * @example true
       */
      copperable?: boolean;
      /**
       * @description Code douanier
       * @example 8544300089
       */
      customsCode?: string | null;
      /**
       * Icône
       * Format: binary
       * @description Icône
       * @example /uploads/component-families/1.jpg
       */
      file?: string | null;
      /**
       * Nom
       * @description Nom
       * @example Câbles
       */
      name: string;
      /**
       * Famille parente
       * Format: iri-reference
       * @description Famille parente
       * @example /api/component-families/2
       */
      parent?: string | null;
    };
    Employee: components["schemas"]["Entity"] & {
      /**
       * Nom
       * @description Nom
       * @example Super
       */
      name: string;
      /**
       * Rôles
       * @description Rôles
       * @example ROLE_USER
       */
      roles: string[];
      /**
       * Token
       * @description Token
       * @example 47e65f14b42a5398c1eea9125aaf93e44b1ddeb93ea2cca769ea897e0a285e4e7cfac21dee1a56396e15c1c5ee7c8d4e0bf692c83cda86a6462ad707
       */
      token: string | null;
      /**
       * identifiant
       * @description identifiant
       * @example super
       */
      username: string;
    };
    /**
     * @description Status
     * @example blocked
     * @enum {string}
     */
    "Employee-CurrentPlace": "blocked" | "disabled" | "enabled" | "warning";
    /** @description Groupe d'équipements */
    "EngineGroup-read": components["schemas"]["EngineGroup-write"] &
      components["schemas"]["Entity"] & {
        safetyDevice: unknown;
      };
    /** @description Groupe d'équipements */
    "EngineGroup-write": {
      /**
       * Code
       * @description Code
       * @example TA
       */
      code: string;
      /**
       * Nom
       * @description Nom
       * @example Table d'assemblage
       */
      name: string;
      /**
       * Organe de sécurité
       * @description Organe de sécurité
       * @example true
       */
      safetyDevice?: boolean;
    };
    Entity: components["schemas"]["Resource"] & {
      /**
       * id
       * @description id
       * @example 1
       */
      id: number;
    };
    /** @description Type d'événements */
    "EventType-read": components["schemas"]["Entity"] &
      components["schemas"]["EventType-write"] & {
        toStatus: unknown;
      };
    /** @description Type d'événements */
    "EventType-write": {
      /**
       * Nom
       * @description Nom
       * @example ABSENCE
       */
      name: string;
      toStatus?: components["schemas"]["Employee-CurrentPlace"] &
        (unknown | null);
    };
    /** @description Incoterms */
    "Incoterms-read": components["schemas"]["Entity"] &
      components["schemas"]["Incoterms-write"];
    /** @description Incoterms */
    "Incoterms-write": {
      /**
       * Code
       * @description Code
       * @example DDP
       */
      code: string;
      /**
       * Nom
       * @description Nom
       * @example Delivered Duty Paid
       */
      name: string;
    };
    /** @description Délai de paiement des factures */
    "InvoiceTimeDue-read": components["schemas"]["Entity"] &
      components["schemas"]["InvoiceTimeDue-write"] & {
        days: unknown;
        daysAfterEndOfMonth: unknown;
        endOfMonth: unknown;
      };
    /** @description Délai de paiement des factures */
    "InvoiceTimeDue-write": {
      /**
       * Jours
       * @description Jours
       * @example 30
       */
      days?: number | null;
      /**
       * Jours après la fin du mois
       * @description Jours après la fin du mois
       */
      daysAfterEndOfMonth?: number | null;
      /**
       * Fin du mois
       * @description Fin du mois
       * @example true
       */
      endOfMonth?: boolean;
      /**
       * Nom
       * @description Nom
       * @example 30 jours fin de mois
       */
      name: string;
    };
    /** @description Notification */
    Notification: {
      /**
       * Catégorie
       * @description Catégorie
       */
      category: string | null;
      /**
       * Format: date-time
       * @default CURRENT_TIMESTAMP
       * @example CURRENT_TIMESTAMP
       */
      createdAt?: string;
      read?: boolean;
      subject?: string | null;
      /** Format: iri-reference */
      user?: string;
    };
    /** @description Base d'une resource */
    Resource: {
      "@context":
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id": string;
      "@type": string;
    };
  };
  responses: {
    /** Bad request */
    400: unknown;
    /** Unauthorized */
    401: unknown;
    /** Method Not Allowed */
    405: unknown;
    /** Internal Server Error */
    500: unknown;
  };
}

export interface operations {}

export interface external {}
